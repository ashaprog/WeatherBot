import telebot
import pyowm
import gptkey
import secretWeather
import openai
import owmToken
import random
from telebot import types

#—Ç–æ–∫–µ–Ω —Ç–≥ –±–æ—Ç–∞

bot = telebot.TeleBot(token=secretWeather.botToken)

#—Ç–æ–∫–µ–Ω ChatGPT

openai.api_key = (gptkey.gptToken)

#—Ç–æ–∫–µ–Ω OWM

owm = pyowm.OWM(owmToken.token)

mgr = owm.weather_manager()

#–¥–≤–∏–∂–æ–∫ ChatGPT

engine = 'text-davinci-003'

#—Å–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –∫–Ω–æ–ø–∫–∞ get_location –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∞ —Ç–∞–∫ –∂–µ –¥–µ–ª–∞–µ–º —Ö–µ–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥—ã /start

@bot.message_handler(commands=['start'])
def text(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=False)
    but1 = types.KeyboardButton('–ü–æ–≥–æ–¥–∞‚òÄ')
    but2 = types.KeyboardButton('–ü–æ–º–æ—â—åüÜò')
    get_location = types.KeyboardButton("üìç–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é", request_location=True)
    keyboard.add(get_location, but1, but2)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –ø–æ –æ–¥–µ–∂–¥–µ –æ—Ç ChatGPT - –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É 'üìç–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é' –∏ –ø–µ—Ä–µ–¥–∞–π –º–Ω–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ü–æ–≥–æ–¥–∞‚òÄ' —á—Ç–æ–±—ã –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –≤—Ä—É—á–Ω—É—é", reply_markup=keyboard)


@bot.message_handler(func=lambda message: message.text == '–ü–æ–º–æ—â—åüÜò')
def help(message):
    if message.text == '–ü–æ–º–æ—â—åüÜò':
        bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n-–ö–Ω–æ–ø–∫–∞ 'üìç–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é' –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞—à—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –∏ –±–æ—Ç —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –≤–∞–º –æ –ø–æ–≥–æ–¥–µ –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ, –∏ —Å–∞–º ChatGPT –ø–æ–¥—Å–∫–∞–∂–µ—Ç –≤–∞–º —á—Ç–æ –Ω–∞–¥–µ—Ç—å)\n'
                         '-–ö–Ω–æ–ø–∫–∞ '–ü–æ–≥–æ–¥–∞‚òÄ' –ø–æ–∑–≤–æ–ª–∏—Ç –≤–∞–º –≤–≤–µ—Å—Ç–∏ –≥–æ—Ä–æ–¥ –≤—Ä—É—á–Ω—É—é –∏ —É–∑–Ω–∞—Ç—å —Ç—É –∂–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é)')


#—Ö–µ–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥—ã –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏, –∏—â–µ–º –≥–æ—Ä–æ–¥ –ø–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º —à–∏—Ä–æ—Ç—ã lat –∏ –¥–æ–ª–≥–æ—Ç—ã lon, –∞ —Ç–∞–∫ –∂–µ –¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –∫ ChatGPT —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ prompt –∏ completion

@bot.message_handler(content_types=["location"])
def locatWeather(message):
    if message.location is not None:
        bot.send_message(message.chat.id, '‚òÄ–ò—â—É –ø–æ–≥–æ–¥—É –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ...')
        lat = message.location.latitude
        lon = message.location.longitude
        observation = mgr.weather_at_coords(lat, lon)
        w = observation.weather
        weathercondRus = {'clear sky': '—è—Å–Ω–æ‚òÄ', 'few clouds': '–º–∞–ª–æ-–æ–±–ª–∞—á–Ω–æ‚õÖ', 'scattered clouds': '–Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±–ª–∞—á–Ω–æüå§Ô∏è',
                          'broken clouds': '–æ–±–ª–∞—á–Ω–æ‚òÅ', 'shower rain': '–ª–∏–≤–µ–Ω—åüí¶',
                          'rain': '–¥–æ–∂–¥—åüåßÔ∏è', 'thunderstorm': '–≥—Ä–æ–∑–∞üå©Ô∏è', 'snow': '–∏–¥–µ—Ç —Å–Ω–µ–≥üå®Ô∏è', 'mist': '—Ç—É–º–∞–Ω–Ω–æüå´Ô∏è', 'overcast clouds': '–æ–±–ª–∞—á–Ω–æ‚òÅ'}
        w.detailed_status = weathercondRus[w.detailed_status]
        wind = w.wind()['speed']
        feel = int(w.temperature('celsius')['feels_like'])
        temp = int(w.temperature('celsius')['temp'])
        prompt = f"–°–∫–∞–∂–∏ —á—Ç–æ –æ–¥–µ—Ç—å –ø—Ä–∏ {feel} –≥—Ä–∞–¥—É—Å–æ–≤. –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –¥—Ä—É–∂–µ—Å–∫–æ–º —Å—Ç–∏–ª–µ"
        completion = openai.Completion.create(engine=engine, prompt=prompt, temperature=0.5, max_tokens=1000)
        completionG = completion.choices[0]['text']
        bot.send_message(message.chat.id, f'‚òÄ–í –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ —Å–µ–π—á–∞—Å {w.detailed_status} \nüå°Ô∏è–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {temp} –≥—Ä–∞–¥—É—Å–æ–≤. –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feel} –≥—Ä–∞–¥—É—Å–æ–≤. üí®–í–µ—Ç–µ—Ä {wind} –º/—Å. {completionG}-–°–æ–≤–µ—Ç –æ—Ç ChatGPTü§ì')

#—Ö–µ–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥—ã /city, –≤ –ø–µ—Ä–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –∞ –≤–æ –≤—Ç–æ—Ä–æ–π –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —ç—Ç–æ—Ç –≥–æ—Ä–æ–¥ –≤ OWM, –∏ –≥–æ–≤–æ—Ä–∏–º —á—Ç–æ –Ω–µ –Ω–∞—à–ª–∏ —Ç–∞–∫–æ–π –≥–æ—Ä–æ–¥, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ–∫–∫–æ—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–ª–∏, –∏–ª–∏ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –Ω–∞ OWM
#–∑–∞–ø—Ä–æ—Å—ã –∫ ChatGPT —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ prompt –∏ completion

@bot.message_handler(func=lambda message: message.text == '–ü–æ–≥–æ–¥–∞‚òÄ')
def city(message):
    city = message.text
    bot.send_message(message.chat.id, "üåá–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")
    bot.register_next_step_handler(message, cityWeather)
def cityWeather(message):
    try:
        bot.send_message(message.chat.id, '‚òÄ–ò—â—É –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ {city}'.format(city=message.text))
        data = message.text
        observation = mgr.weather_at_place(data)
        w = observation.weather
        wind = w.wind()['speed']
        temp = int(w.temperature('celsius')['temp'])
        weathercondRus = {'clear sky': '—è—Å–Ω–æ‚òÄ', 'few clouds': '–º–∞–ª–æ-–æ–±–ª–∞—á–Ω–æ‚õÖ',
                          'scattered clouds': '–Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±–ª–∞—á–Ω–æüå§Ô∏è',
                          'broken clouds': '–æ–±–ª–∞—á–Ω–æ‚òÅ', 'shower rain': '–ª–∏–≤–µ–Ω—åüí¶',
                          'rain': '–¥–æ–∂–¥—åüåßÔ∏è', 'thunderstorm': '–≥—Ä–æ–∑–∞üå©Ô∏è', 'snow': '–∏–¥–µ—Ç —Å–Ω–µ–≥üå®Ô∏è', 'mist': '—Ç—É–º–∞–Ω–Ω–æüå´Ô∏è', 'overcast clouds': '–æ–±–ª–∞—á–Ω–æ‚òÅ'}
        w.detailed_status = weathercondRus[w.detailed_status]
        feel = int(w.temperature('celsius')['feels_like'])
        #prompt = f"–°–∫–∞–∂–∏ —á—Ç–æ –æ–¥–µ—Ç—å –≤ {w.detailed_status} –ø–æ–≥–æ–¥—É –≤ 1 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ –∏ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ–º —Å—Ç–∏–ª–µ –ø—Ä–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ {feel} –≥—Ä–∞–¥—É—Å–æ–≤"
        prompt = f"–°–∫–∞–∂–∏ —á—Ç–æ –æ–¥–µ—Ç—å –ø—Ä–∏ {feel} –≥—Ä–∞–¥—É—Å–æ–≤. –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –¥—Ä—É–∂–µ—Å–∫–æ–º —Å—Ç–∏–ª–µ"
        completion = openai.Completion.create(engine=engine, prompt=prompt, temperature=0.5, max_tokens=1000)
        completionG = completion.choices[0]['text']
        bot.send_message(message.chat.id,
                         f'‚òÄ–í –≥–æ—Ä–æ–¥–µ {message.text} —Å–µ–π—á–∞—Å {w.detailed_status} \nüå°Ô∏è–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {temp} –≥—Ä–∞–¥—É—Å–æ–≤. –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feel} –≥—Ä–∞–¥—É—Å–æ–≤. üí®–í–µ—Ç–µ—Ä {wind} –º/—Å {completionG}-–°–æ–≤–µ—Ç –æ—Ç ChatGPTü§ì')
    except Exception as error:
        bot.send_message(message.chat.id, '–Ø –Ω–µ –Ω–∞—à–µ–ª —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑)')

#—Ö–µ–Ω–¥–ª–µ—Ä —Ä–∞–Ω–¥–æ–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

@bot.message_handler(content_types=['text'])
def text_handler(message):
    bot.send_message(message.chat.id, "–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª! –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É - –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É '–ü–æ–≥–æ–¥–∞‚òÄ', –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é! ")
    pass

bot.polling(none_stop=True)
